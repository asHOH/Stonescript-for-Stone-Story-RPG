/* --------- Level 0: Rocky plateau --------- */

/* ----------------- imports ---------------- */
var eq = import UserScript/eq
var util = import UserScript/util
var s = import UserScript/s
var hud = import UserScript/hud

/* ---------------- variables --------------- */
var permapot = true
var mask_run = permapot
var post_mask_run = false
var timer = new UserScript/timer
var boss_atk_counter = new UserScript/timer
var is_stunned = false

?s.loc_ = "rocky"
  util.harvest_on = false
  util.autowalk_on = false
  brew_potion()
  check_stunned()
  ?permapot 
    ?s.loop_count > 1
      mask_run = false
      post_mask_run = true
    ?mask_run
      util.cultist_walk_on = true

  ?s.loc_begin_or_loop
    timer.close()
    boss_atk_counter.set(3)
  // ?s.pos_x = 121 & s.total_time < 400 & s.foe_state = 127 & s.foe_time >= 30 & s.foe_time <= 55
  //   eq.bardiche(true)
  ?s.foe_distance > 16 & !timer.between(0,1)
    util.walk()
  :?timer.between(0,1) | (!util.try_dashing()) // timer 2 is the dodge moment. wait 2 frames then dash back.
    ?s.foe_distance < 11
      ?s.foe_ = "phase1"        
        phase1()
      :?s.foe_ = "phase2"
        phase2()
      :?s.foe_ = "phase3"
        phase3()
      :
        scout()

  timer.update()


/* Phase 1: weakness element is fire. Apply debuffs.
  Phase 2: Prepare weapons of every element. When it uses vigor attack, it resist debuffs.
  phase 3: Mind stone when it shields or uses orbital laser. Weak to all elements but gains resistance buff each time it shields. */

func phase3()
  inspect_weakness_phase3()
  >`0,17,boss_atk_counter@boss_atk_counter.t@
  >`0,18,@timer.t@
  // determine: when to dodge
  ?(!s.can_activate_or_using_bardiche) & (!permapot)
    s.activate_potion()
  ?s.foe_state = 115 // satellite
    ?s.foe_state_changed
      timer.set(79)
    boss_atk_counter.set(3)
  :?s.foe_state = 32
    ?s.foe_state_changed
      boss_atk_counter.update()
      // ?boss_atk_counter.at(1) // shield
      //   timer.set(70)
    :?!boss_atk_counter.at(1)
      ?defend_at(89)
        return
    :?boss_atk_counter.at(1) & s.foe_state_at(32, 68)
      util.try_dodge()
      timer.set(2) // you'll be stunned on foe state 33,0 ~ 33,1
      return  
  
  // action: dodge or attack
  ?timer.at(2)
    util.try_dodge()
  :?mask_run
      eq.R_cultist()
      ?!L_debuff_weapon()
        eq.L_sword()
  :?!util.try_bardiche()
    ?s.foe_has_armor
      eq.L(eq.best_hammer)
      R_debuff_weapon()
    :
      eq.L_sword()
      inspect_another_weakness_phase3()
      ?!R_debuff_weapon()
        eq.R_sword()
    

func phase1()
  eq.element = "fire"
  ?mask_run
    eq.R_cultist()
    ?!L_debuff_weapon()
      eq.L_sword()
  :
    ?util.try_bardiche()
      return
    :
      eq.L_sword()
      ?!R_debuff_weapon()
        eq.R_sword2()
      
  defend_at(64)
  check_retreat()


func phase2()
  util.inspect_weakness()
  eq.L_sword()
  ?mask_run
    eq.R_cultist()
  :   
    ?(s.foe_buff_string = "buff") | !R_debuff_weapon()
      eq.R_sword2()
  
  defend_at(59)
  check_retreat()

func scout()
  eq.element = "none"
  ?mask_run
    eq.R_cultist()
    ?!L_debuff_weapon()
      eq.L_sword()
  :
    ?util.try_bardiche()
      return
    :
      eq.L(eq.best_sword)
      ?!R_debuff_weapon()
        eq.R_sword()

  defend_at(54)

func L_debuff_weapon()
  ?s.foe_debuff_F_time < 5
    eq.L_sword_dF()
    return true
  ?s.foe_debuff_I_count < 6 | s.foe_debuff_I_time < 6
    eq.L_sword_dI()
    return true
  ?(!s.foe_debuff_P) & (s.foe_ ! "phase3" | (s.foe_ = "phase3" & s.foe_state = 32 & s.foe_time >= 55))
    eq.L_sword_dP()
    return true
  ?s.lost_hp >= 60
    eq.L_sword_dL()
    return true
  ?s.foe_has_armor
    eq.L(eq.best_hammer2)
    return true
  ?s.lost_hp >= 15
    eq.L_sword_dL()
    return true
  return false

func R_debuff_weapon()
  ?s.foe_debuff_F_time < 5
    eq.R_sword_dF()
    return true
  ?s.foe_debuff_I_count < 6 | s.foe_debuff_I_time < 6
    eq.R_sword_dI()
    return true
  ?(!s.foe_debuff_P) & (s.foe_ ! "phase3" | (s.foe_ = "phase3" & s.foe_state = 32 & s.foe_time >= 55))
    eq.R_sword_dP()
    return true
  ?s.lost_hp >= 60
    eq.R_sword_dL()
    return true
  ?s.foe_has_armor
    eq.R(eq.best_hammer2)
    return true
  ?s.lost_hp >= 20
    eq.R_sword_dL()
    return true
  return false

func inspect_weakness_phase3()
  // ∞>❄>φ>*>♥>∞
  ?s.foe_buff_string ! "ice"
    eq.element = "ice"
  :?s.foe_buff_string ! "fire"
    eq.element = "fire"
  :?s.foe_buff_string ! "aether"
    eq.element = "aether"
  :?s.foe_buff_string ! "vigor"
    eq.element = "vigor"
  :
    eq.element = "poison"
  return eq.element

func inspect_another_weakness_phase3()
  // ∞>❄>φ>*>♥>∞
  ?s.foe_buff_string ! "ice" & eq.element ! "ice"
    eq.element = "ice"
  :?s.foe_buff_string ! "fire" & eq.element ! "fire"
    eq.element = "fire"
  :?s.foe_buff_string ! "aether" & eq.element ! "aether"
    eq.element = "aether"
  :?s.foe_buff_string ! "vigor" & eq.element ! "vigor"
    eq.element = "vigor"
  :
    eq.element = "poison"
  return eq.element

func defend()
  ?s.lost_hp >= 2
    eq.R_shield_ah()
  :
    eq.R_shield_af()
  >`0,0,defend!

func defend_at(foe_time)
  ?s.foe_state_at(32, foe_time)
    defend()
    return true
  return false

func check_retreat()
  ?s.foe_count > 0 & s.foe_hp <= 0 & !mask_run
    eq.R_shield_auto(false)
    equipL ouroboros

func brew_potion()
  ?permapot
    s.brew_potion("lucky")
    s.activate_potion()
  :
    s.brew_potion("berserk")

func check_stunned()
  ?s.debuffs_string = "stun" & !is_stunned
    hud.perma_show(0, 12, "Stunned at timer" + timer.t + ", fs" + s.foe_state + ", " + s.foe_time + ", totaltime" + s.total_time)
    is_stunned = true